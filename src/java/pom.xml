<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<log4j.version>2.13.2</log4j.version>
		<portico.version>2.2.0</portico.version>
	</properties>

	<!-- =========================================================================================== -->
	<!-- NOTE:  -->
	<!-- This is required until Portico 2.2.0 is being served from a "real" Maven repository         -->
	<!-- Basically we create a Maven repository on the local file system, and add the JAR to be      -->
	<!-- served from there. This avoids issues associated with pointing directly to a file on the    -->
	<!-- file system, which can cause significant issues when packaging things up.                   -->
	<!--                                                                                             -->
	<!-- The Portico JAR to use must be manually added to the local repo with the following Maven    -->
	<!-- command issued from the root folder of this project (i.e., the same folder as this pom.xml  -->
	<!-- is located in). The command is split onto separate lines for visibility only, and the       -->
	<!-- actual command should of course be on a single line                                         -->
	<!--                                                                                             -->
	<!--     mvn deploy:deploy-file -DgroupId=org.portico -DartifactId=portico -Dversion=2.2.0       -->
	<!--                            -Durl=file:./local-maven-repo/ -DrepositoryId=local-maven-repo   -->
	<!--                            -DupdateReleaseInfo=true                                         -->
	<!--                            -Dfile=./src/main/resources/lib/portico-master.jar               -->
	<!--                                                                                             -->
	<!-- The argument for -Dversion *must* match the value in the <portico.version> property as      -->
	<!-- defined above in this file.                                                                 -->
	<!--                                                                                             -->
	<!-- See...                                                                                      -->
	<!-- https://stackoverflow.com/questions/4955635/how-to-add-local-jar-files-to-a-maven-project/36602256#36602256 -->
	<!-- ...for more details on this technique.                                                      -->
	<!-- =========================================================================================== -->
	<repositories>
		<repository>
			<id>local-maven-repo</id>
			<url>file:///${project.basedir}/../local-maven-repo</url>
		</repository>
	</repositories>
	<!-- =========================================================================================== -->

	<!-- parent pom -->
	<groupId>gov.nist.ucef</groupId>
	<artifactId>ucef-java-all-modules</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>ucef-java-all-modules</name>

	<!-- sub modules -->
	<modules>
		<module>ucef-java-core</module>
		<module>ucef-java-tools</module>
		<module>ucef-java-examples</module>
		<module>ucef-java-genx-ping</module>
		<module>ucef-java-genx-pong</module>
	</modules>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.portico</groupId>
			<artifactId>portico</artifactId>
			<version>${portico.version}</version>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<!-- copies all required JARs to lib folder -->
			<!-- 
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			 -->
			<!-- like above, but creates a "super JAR" containing all required JARs -->
			<!-- plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>org.sonatype.haven.HavenCli</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin -->
		</plugins>	
	</build>
</project>
